{"version":3,"file":"static/js/972.06d1a6cc.chunk.js","mappings":"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","sources":["components/dataExchange/ProfileImportExport.tsx","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React, {CSSProperties, useContext, useState} from 'react';\nimport {Container} from 'react-bootstrap';\nimport {deserializeProfile, serializeProfile} from \"../../services/ProfileSerializer\";\nimport ToastContext from \"../../contexts/ToastContext\";\nimport ProfileContext from \"../../contexts/ProfileContext\";\nimport {markProfileDirty} from \"../../services/Persistence\";\n\nfunction ProfileImportExport() {\n    const { profile, setProfile } = useContext(ProfileContext);\n    const [textBoxData, setTextBoxData] = useState(serializeProfile(profile));\n    const { showToast } = useContext(ToastContext)\n\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(textBoxData).then(r => {\n            showToast(\"Profile is copied to clipboard\", \"success\")\n        });\n    };\n\n    const setProfileFromTextBoxData = () => {\n        // assuming setProfile is expecting a string\n        const newProfile = deserializeProfile(textBoxData);\n        if (newProfile) {\n            setProfile(newProfile);\n            markProfileDirty(newProfile);\n            showToast(\"Profile is loaded\", \"success\");\n        } else {\n            showToast(\"Can't deserialize profile\", \"danger\");\n        }\n    };\n\n    const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setTextBoxData(event.target.value);\n    };\n\n    const textAreaStyle: CSSProperties = {\n        width: '80%',\n        height: '80%',\n        margin: '0 auto',\n    };\n\n    const containerStyle: CSSProperties = {\n        height: '90vh',\n    };\n\n    \n    return (\n        <Container className=\"page d-flex flex-column align-items-center\" style={containerStyle}>\n            <textarea style={textAreaStyle} value={textBoxData} onChange={handleInput}/>\n            <button onClick={copyToClipboard}>Copy textbox data to clipboard</button>\n            <button onClick={setProfileFromTextBoxData}>Set profile from textbox data</button>\n        </Container>\n    );\n}\n\nexport default ProfileImportExport;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;"],"names":["profile","setProfile","useContext","ProfileContext","textBoxData","setTextBoxData","useState","serializeProfile","showToast","ToastContext","_jsxs","Container","className","style","height","children","_jsx","width","margin","value","onChange","event","target","onClick","copyToClipboard","navigator","clipboard","writeText","then","r","setProfileFromTextBoxData","newProfile","deserializeProfile","markProfileDirty","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","React","prefixes","breakpoints","minBreakpoint","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","_ref","ref","bsPrefix","fluid","as","Component","props","suffix","concat","displayName"],"sourceRoot":""}