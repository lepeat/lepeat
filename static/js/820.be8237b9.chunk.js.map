{"version":3,"file":"static/js/820.be8237b9.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","services/Merger.ts","components/dataExchange/GoogleDriveSynchronizer.tsx","components/AppHeader.js","components/AppSidebarNav.js","assets/brand/logo.js","assets/brand/sygnet.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./components/dashboard/Dashboard'))\nconst TrainingModificationPage = React.lazy(() => import('./components/trainingModificationPage/TrainingModificationPage'))\nconst TrainingsPage = React.lazy(() => import('./components/trainingsPage/TrainingsPage'))\nconst TrainingSession = React.lazy(() => import('./components/training/TrainingSession'))\nconst Statistics = React.lazy(() => import('./components/statistics/debug/Statistics'))\nconst ImportExportWords = React.lazy(() => import('./components/dataExchange/TermsImportExport'))\nconst ImportExportProfile = React.lazy(() => import('./components/dataExchange/ProfileImportExport'))\nconst BacklogPage = React.lazy(() => import('./backlog/BacklogPage'))\nconst TermsPage = React.lazy(() => import('./components/terms/TermsPage'))\nconst TermModificationPage = React.lazy(() => import('./components/termModificationPage/TermModificationPage'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/statistics', name: 'Statistics', element: Statistics },\n  { path: '/training_session', name: 'Training session', element: TrainingSession },\n  { path: '/import_export_words', name: 'Words', element: ImportExportWords},\n  { path: '/import_export_profile', name: 'Profile', element: ImportExportProfile},\n  { path: '/backlog', name: 'Profile', element: BacklogPage},\n  { path: '/words', name: 'Words', element: TermsPage},\n  { path: '/edit-term/:id', name: 'Term editing', element: TermModificationPage},\n  { path: '/add-term', name: 'Term adding', element: TermModificationPage},\n  { path: '/trainings', name: 'Words', element: TrainingsPage},\n  { path: '/edit-training/:id', name: 'Term editing', element: TrainingModificationPage},\n  { path: '/add-training', name: 'Term adding', element: TrainingModificationPage},\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer className=\"d-flex flex-column flex-grow-1 px-4\" lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter className=\"px-4 fs-7\">\n      <div>\n        <a href=\"https://github.com/saltukkos/lepeat\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Lepeat\n        </a>\n        <span className=\"ms-1\">&copy; 2024 Anastasia &amp; Konstantin Saltuk.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          CoreUI\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import {LepeatProfile} from \"../model/LepeatProfile\";\nimport {TermDefinition} from \"../model/TermDefinition\";\nimport {Term} from \"../model/Term\";\nimport {MergeableEntity} from \"../model/MergeableEntity\";\nimport {AttributeDefinition} from \"../model/AttributeDefinition\";\nimport {TrainingDefinition} from \"../model/TrainingDefinition\";\nimport {TrainingProgress} from \"../model/TrainingProgress\";\nimport {cloneProfile} from \"./ProfileSerializer\";\nimport {string} from \"prop-types\";\n\n\nexport function mergeProfiles(profile1 : LepeatProfile, profile2 : LepeatProfile) {\n    const storage = new Map<string, MergeableEntity>();\n\n    function mergeTermDefinitions(termDefinitions1: TermDefinition[], termDefinitions2: TermDefinition[]) {\n        const attributes1 = termDefinitions1.flatMap(t => t.attributes);\n        const attributes2 = termDefinitions2.flatMap(t => t.attributes);\n        mergeArrays(attributes1, attributes2, item => item, mainItem => mainItem);\n\n        return mergeArrays(\n            termDefinitions1,\n            termDefinitions2,\n            item => ({\n                ...item,\n                attributes: item.attributes.map(intern)\n            }),\n            (mainItem, secondItem) => ({\n                ...mainItem,\n                attributes: mergeAttributeDefinitions(mainItem.attributes, secondItem.attributes)\n            }));\n    }\n\n    function mergeAttributeDefinitions(attributes1: AttributeDefinition[], attributes2: AttributeDefinition[]) {\n        return mergeArrays(\n            attributes1,\n            attributes2,\n            intern,\n            intern,\n        );\n    }\n\n\n    function mergeTerms(terms1: Term[], terms2: Term[]) {\n        return mergeArrays(\n            terms1,\n            terms2,\n            item => ({\n                ...item,\n                termDefinition: intern(item.termDefinition),\n                attributeValues: internKeysOfMap(item.attributeValues)\n            }),\n            (mainItem, secondItem) => ({\n                ...mainItem,\n                termDefinition: intern(mainItem.termDefinition),\n                attributeValues: mergeMapsFirstPriority(mainItem.attributeValues, secondItem.attributeValues)\n            }))\n    }\n\n    function mergeTrainingDefinitions(trainingDefinitions1: TrainingDefinition[], trainingDefinitions2: TrainingDefinition[]) {\n        return mergeArrays(\n            trainingDefinitions1,\n            trainingDefinitions2,\n            item => ({\n                ...item,\n                configuration: internKeysOfMapWithInnerUpdate(\n                    item.configuration,\n                    value => value),\n            }),\n            (mainItem, secondItem) => ({\n                ...mainItem,\n                configuration: mergeMaps(\n                    mainItem.configuration,\n                    secondItem.configuration,\n                    value => value,\n                    mainItem => mainItem),\n            }))\n    }\n\n    function mergeTrainingProgresses(trainingProgresses1: Map<TrainingDefinition, TrainingProgress>, trainingProgresses2: Map<TrainingDefinition, TrainingProgress>) {\n        return mergeMapsWithCustomMerger(\n            trainingProgresses1,\n            trainingProgresses2,\n            item => ({\n                progress: internKeysOfMapWithInnerUpdate(item.progress, value => ({\n                    ...value,\n                    term: intern(value.term)\n                }))\n            }),\n            (mainProgress, secondProgress) => ({\n                progress: mergeMaps(\n                    mainProgress.progress,\n                    secondProgress.progress,\n                    item => ({...item, term: intern(item.term)}),\n                    (mainItem) => ({...mainItem, term: intern(mainItem.term)}))\n            }));\n    }\n\n    profile1 = cloneProfile(profile1);\n    profile2 = cloneProfile(profile2);\n\n    const resultProfile : LepeatProfile = {\n        termDefinitions: mergeTermDefinitions(profile1.termDefinitions, profile2.termDefinitions),\n        terms: mergeTerms(profile1.terms, profile2.terms),\n        trainingDefinitions: mergeTrainingDefinitions(profile1.trainingDefinitions, profile2.trainingDefinitions),\n        trainingProgresses: mergeTrainingProgresses(profile1.trainingProgresses, profile2.trainingProgresses),\n    };\n\n    return resultProfile;\n\n    function mergeArrays<T extends MergeableEntity>(\n        array1: T[], array2: T[],\n        entityUpdater: (item: T) => T,\n        entityMerger: (mainItem: T, secondItem: T) => T) {\n\n        const mergedElements = new Map<string, T>();\n        array1.forEach(item => mergedElements.set(validateId(item.id), entityUpdater(item)));\n\n        array2.forEach(item => {\n            const existingItem = mergedElements.get(validateId(item.id));\n            if (existingItem) {\n                mergedElements.set(item.id, resolveConflict(existingItem, item, entityMerger));\n            } else {\n                mergedElements.set(item.id, entityUpdater(item))\n            }\n        });\n\n        mergedElements.forEach(intern);\n        return Array.from(mergedElements.values());\n    }\n\n    function mergeMapsFirstPriority<TKey extends MergeableEntity, TValue>(\n        map1: Map<TKey, TValue>,\n        map2: Map<TKey, TValue>) {\n\n        const mergedKeys = new Map<string, TKey>();\n        const result = new Map<TKey, TValue>();\n\n        function applyMapToResult(map: Map<TKey, TValue>) {\n            map.forEach((value, key) => {\n                validateId(key.id);\n                if (mergedKeys.has(key.id)) {\n                    return;\n                }\n\n                mergedKeys.set(key.id, intern(key));\n                result.set(intern(key), value);\n            });\n        }\n\n        applyMapToResult(map1);\n        applyMapToResult(map2);\n\n        return result;\n    }\n\n    function mergeMaps<TKey extends MergeableEntity, TValue extends MergeableEntity>(\n        map1: Map<TKey, TValue>,\n        map2: Map<TKey, TValue>,\n        entityUpdater: (item: TValue) => TValue,\n        entityMerger: (mainItem: TValue, secondItem: TValue) => TValue) {\n\n        const mergedKeys = new Map<string, TKey>();\n        const result = new Map<TKey, TValue>();\n\n        function applyMapToResult(map: Map<TKey, TValue>) {\n            map.forEach((value, key) => {\n                validateId(key.id);\n                validateId(value.id);\n\n                if (!mergedKeys.has(key.id)) {\n                    const newKey = intern(key);\n                    mergedKeys.set(key.id, newKey);\n                    result.set(newKey, entityUpdater(value));\n                    return;\n                }\n\n                const existingKey = mergedKeys.get(key.id)!;\n                const existingValue = result.get(existingKey)!;\n                result.set(existingKey, resolveConflict(existingValue, value, entityMerger));\n            });\n        }\n\n        applyMapToResult(map1);\n        applyMapToResult(map2);\n\n        result.forEach(intern);\n\n        return result;\n    }\n\n    function mergeMapsWithCustomMerger<TKey extends MergeableEntity, TValue>(\n        map1: Map<TKey, TValue>,\n        map2: Map<TKey, TValue>,\n        entityUpdater: (item: TValue) => TValue,\n        entityMerger: (mainItem: TValue, secondItem: TValue) => TValue) {\n\n        const mergedKeys = new Map<string, TKey>();\n        const result = new Map<TKey, TValue>();\n\n        function applyMapToResult(map: Map<TKey, TValue>) {\n            map.forEach((value, key) => {\n                validateId(key.id);\n\n                if (!mergedKeys.has(key.id)) {\n                    mergedKeys.set(key.id, intern(key));\n                    result.set(intern(key), entityUpdater(value));\n                    return;\n                }\n\n                const existingKey = mergedKeys.get(key.id)!;\n                const existingValue = result.get(existingKey)!;\n                result.set(existingKey, entityMerger(existingValue, value));\n            });\n        }\n\n        applyMapToResult(map1);\n        applyMapToResult(map2);\n\n        return result;\n    }\n\n    function resolveConflict<T extends MergeableEntity>(existingElement: T, newCandidate: T, entityMerger: (mainItem: T, secondItem: T) => T){\n        validateId(existingElement.id);\n        validateId(newCandidate.id);\n\n        if ((newCandidate.lastEditDate ?? 0) > (existingElement.lastEditDate ?? 0)) {\n            return entityMerger(newCandidate, existingElement);\n        }\n\n        return entityMerger(existingElement, newCandidate);\n    }\n\n    function intern<T extends MergeableEntity>(element: T){\n        validateId(element.id);\n        const existingEntity = storage.get(element.id);\n        if (existingEntity){\n            return existingEntity as T;\n        }\n\n        storage.set(element.id, element);\n        return element;\n    }\n\n    function internKeysOfMap<TKey extends MergeableEntity, TValue>(map: Map<TKey, TValue>): Map<TKey, TValue> {\n        const internedMap = new Map<TKey, TValue>();\n        map.forEach((value, key) => {\n            internedMap.set(intern(key), value);\n        });\n        return internedMap;\n    }\n\n    function internKeysOfMapWithInnerUpdate<TKey extends MergeableEntity, TValue>(map: Map<TKey, TValue>, valueUpdater: (value: TValue) => TValue) {\n        const internedMap = new Map<TKey, TValue>();\n        map.forEach((value, key) => {\n            internedMap.set(intern(key), valueUpdater(value));\n        });\n        return internedMap;\n    }\n}\n\nfunction validateId(id: string){\n    if (!id)\n        throw new Error(\"Not all objects have valid ID. Can't merge the data\");\n    \n    return id;\n}","import {useGoogleDrive} from \"../../contexts/GoogleDriveContext\";\nimport {CButton} from \"@coreui/react\";\nimport {useContext, useState} from \"react\";\nimport ToastContext from \"../../contexts/ToastContext\";\nimport {deserializeProfile, serializeProfile} from \"../../services/ProfileSerializer\";\nimport ProfileContext from \"../../contexts/ProfileContext\";\nimport {mergeProfiles} from \"../../services/Merger\";\nimport {markProfileDirty} from \"../../services/Persistence\";\n\nfunction GoogleDriveSynchronizer() {\n\n    const { profile, setProfile } = useContext(ProfileContext);\n    const { showToast } = useContext(ToastContext)\n    const {\n        hasDriveAccess, requestDriveAccess, disconnectDrive,\n        isDriveLoaded, isDriveAuthorizing, error,\n        fetchFileList, fetchFile, uploadFile, updateFile, deleteFile\n    } = useGoogleDrive();\n\n    const [existingFile, setExistingFile] = useState<gapi.client.drive.File | \"no file\">();\n    const [filesError, setFilesError] = useState<any>(null);\n    \n    if (!isDriveLoaded){\n        return \"Loading Google Drive components\";\n    }\n    \n    if (isDriveAuthorizing){\n        return \"Authorizing...\";\n    }\n    \n    if (error){\n        return \"Error while authorizing: \" + error;\n    }\n    \n    //TODO: store token in local storage?\n    if (!hasDriveAccess){\n        return (\n            <CButton color=\"primary\" onClick={requestDriveAccess}>Authorize with Google</CButton>\n        );\n    }\n    \n    if (filesError){\n        return \"Can't get files: \" + filesError.message;\n    }\n    \n    if (!existingFile){\n        fetchFileList().then((response) => {\n            const firstProfileFile = response.data.files?.find(file => file.name === \"profile.json\");\n            setExistingFile(firstProfileFile ?? \"no file\");\n            console.log(\"Found profile in google, fileId: \" + firstProfileFile?.id)\n        })\n        .catch((error) => {\n            setFilesError(error);\n            showToast(\"Can't get files from google\")\n        });\n\n        return \"Loading files from drive\";\n    }\n\n    const metadata = {\n        name: \"profile.json\",\n        mimeType: \"application/json\",\n    };\n\n    function createProfileInDrive() {\n        const file = new File([serializeProfile(profile)], \"profile.json\", {\n            type: \"application/json\",\n        });\n\n        uploadFile({file, metadata})\n            .then(response => {\n                showToast(\"Profile uploaded\", 'success')\n                console.log(\"File uploaded:\")\n                console.log(response.data)\n            })\n            .catch(error => {\n                showToast(\"Can't upload profile, error: \" + error, 'success')\n                console.log(\"Can't upload:\")\n                console.log(error)\n            });\n    }\n\n    if (existingFile === \"no file\"){\n        return (\n            <CButton color=\"primary\" onClick={createProfileInDrive}>Create new profile in drive</CButton>\n        );\n    }\n\n    const deleteProfileFromDrive = () => {\n        if (window.confirm(\"Are you sure you want to delete your profile from Drive?\")) {\n            deleteFile(existingFile)\n                .then(r => showToast(\"Profile deleted\", 'success'))\n                .catch(error => showToast(\"Error deleting: \" + error, 'danger'));\n        }\n    };\n\n    const smartMerge = () => {\n        fetchFile<'arraybuffer'>(existingFile) //for some reason, 'text' and 'json' do not work and still return arraybuffer\n            .then(r =>\n            {\n                const decoder = new TextDecoder('utf-8');\n                const text = decoder.decode(new Uint8Array(r.data as ArrayBuffer));\n                const deserializedProfile = deserializeProfile(text);\n\n                if (!deserializedProfile){\n                    showToast(\"Profile from cloud is invalid\", 'danger')\n                }\n                else {\n                    try {\n                        const mergedProfile = mergeProfiles(profile, deserializedProfile);\n                        setProfile(mergedProfile);\n                        markProfileDirty(mergedProfile, true);\n                        \n                        const updatedFile = new File([serializeProfile(profile)], \"profile.json\", {\n                            type: \"text/plain\",\n                        });\n\n                        updateFile({id: existingFile.id ?? \"\", file: updatedFile, metadata})\n                            .then(r => showToast(\"Profile is synchronized\", 'success'))\n                            .catch(error => showToast(\"Local profile is updated, but can't upload result to Drive: \" + error, 'danger'));\n                    }\n                    catch (e){\n                        if (e instanceof Error) {\n                            showToast(e.message, \"danger\");\n                        }\n                        else {\n                            showToast(\"Can't merge, unknown error\", \"danger\");\n                        }\n                    }\n                }\n            })\n            .catch(error => showToast(\"error fetching: \" + error, 'danger'));\n    };\n\n    return (\n        <div className=\"d-flex flex-column gap-5\">\n            <CButton color=\"primary\" onClick={smartMerge}>Synchronize data</CButton>\n            <CButton color=\"secondary\" onClick={disconnectDrive}>Log out</CButton>\n            <CButton color=\"danger\" onClick={deleteProfileFromDrive}>Delete profile from drive</CButton>\n        </div>\n    );\n}\n\nexport default GoogleDriveSynchronizer;","import React, {useEffect, useRef, useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CHeader,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {cilCloudDownload, cilContrast, cilMenu, cilMoon, cilSun} from '@coreui/icons'\nimport routes from \"../routes\";\nimport GoogleDriveSynchronizer from \"./dataExchange/GoogleDriveSynchronizer\";\nimport {synchronizationEnabled} from \"../contexts/SynchronizationProvider\";\n\nconst AppHeader = () => {\n  const [visible, setVisible] = useState(false)\n  \n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  const location = useLocation().pathname;\n  const currentRoute = routes.find((route) => route.path === location)?.name ?? \"\";\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderToggler\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n          style={{ marginInlineStart: '-14px' }}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"fs-5\">\n          <CNavItem>\n            <CNavLink>\n              {currentRoute}\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-auto\">\n          <CButton onClick={() => setVisible(!visible)}>\n            <CIcon icon={cilCloudDownload} size=\"lg\" />\n          </CButton>\n        </CHeaderNav>\n        <CHeaderNav>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n            <CDropdownToggle caret={false}>\n              {colorMode === 'dark' ? (\n                  <CIcon icon={cilMoon} size=\"lg\"/>\n              ) : colorMode === 'auto' ? (\n                  <CIcon icon={cilContrast} size=\"lg\"/>\n              ) : (\n                  <CIcon icon={cilSun} size=\"lg\"/>\n              )}\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <CDropdownItem\n                  active={colorMode === 'light'}\n                  className=\"d-flex align-items-center\"\n                  component=\"button\"\n                  type=\"button\"\n                  onClick={() => setColorMode('light')}\n              >\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\"/> Light\n              </CDropdownItem>\n              <CDropdownItem\n                  active={colorMode === 'dark'}\n                  className=\"d-flex align-items-center\"\n                  component=\"button\"\n                  type=\"button\"\n                  onClick={() => setColorMode('dark')}\n              >\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\"/> Dark\n              </CDropdownItem>\n              <CDropdownItem\n                  active={colorMode === 'auto'}\n                  className=\"d-flex align-items-center\"\n                  component=\"button\"\n                  type=\"button\"\n                  onClick={() => setColorMode('auto')}\n              >\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\"/> Auto\n              </CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CHeaderNav>\n      </CContainer>\n\n      <CModal\n          visible={visible}\n          onClose={() => setVisible(false)}\n          aria-labelledby=\"LiveDemoExampleLabel\"\n      >\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle id=\"LiveDemoExampleLabel\">Synchronization</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {synchronizationEnabled && <GoogleDriveSynchronizer/>}\n          {!synchronizationEnabled && <div className='text-danger'>Provide Google Api Key and OAuth client id to enable synchronization</div>}\n        </CModalBody>\n\n      </CModal>\n\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge, indent = false) => {\n    return (\n      <>\n        {icon\n          ? icon\n          : indent && (\n              <span className=\"nav-icon\">\n                <span className=\"nav-icon-bullet\"></span>\n              </span>\n            )}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index, indent = false) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge, indent)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, items, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        compact\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index, true),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export const logo = [\n  '599 116',\n  `<g>\n    <g fill=\"none\" fill-rule=\"nonzero\">\n      <g style=\"fill:#80d0ff;\">\n        <path d=\"m358.773 79.151-8.768-20.736a.25.25 0 0 0-.255-.191h-9.985a.226.226 0 0 0-.256.255v20.543a.566.566 0 0 1-.64.641h-1.216a.565.565 0 0 1-.64-.64v-43.52a.566.566 0 0 1 .64-.64h12.544a9.979 9.979 0 0 1 7.744 3.23 12.204 12.204 0 0 1 2.944 8.546 12.439 12.439 0 0 1-2.24 7.584 9.37 9.37 0 0 1-6.08 3.744c-.17.086-.214.191-.127.32l8.704 20.608.064.255c0 .342-.192.512-.576.512h-1.152a.703.703 0 0 1-.705-.51Zm-19.264-41.793v18.496a.226.226 0 0 0 .256.257h10.304a7.669 7.669 0 0 0 6.017-2.592 9.878 9.878 0 0 0 2.303-6.816 10.286 10.286 0 0 0-2.272-6.976 7.601 7.601 0 0 0-6.048-2.624h-10.304a.226.226 0 0 0-.256.255ZM398.082 37.102H378.05a.226.226 0 0 0-.256.256v18.496a.226.226 0 0 0 .256.257h13.824a.566.566 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64H378.05a.226.226 0 0 0-.256.256v18.56a.226.226 0 0 0 .256.256h20.032a.567.567 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64h-22.144a.566.566 0 0 1-.64-.64v-43.52a.566.566 0 0 1 .64-.64h22.144a.566.566 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64ZM435.802 79.151l-2.431-8.832a.296.296 0 0 0-.32-.192h-16.768a.295.295 0 0 0-.32.192l-2.368 8.768a.658.658 0 0 1-.704.576h-1.216a.588.588 0 0 1-.48-.191.582.582 0 0 1-.096-.513l12.031-43.584a.644.644 0 0 1 .704-.512h1.6a.644.644 0 0 1 .704.512l12.16 43.584.065.192c0 .342-.214.512-.64.512h-1.217a.643.643 0 0 1-.704-.512ZM416.7 67.92a.303.303 0 0 0 .223.096h15.489a.304.304 0 0 0 .223-.096c.065-.065.075-.117.033-.16l-7.873-28.928c-.043-.085-.085-.128-.127-.128-.042 0-.086.043-.128.128l-7.872 28.928c-.043.043-.033.095.032.16ZM453.357 76.911a11.637 11.637 0 0 1-3.328-8.704V46.19a11.414 11.414 0 0 1 3.36-8.575 12.09 12.09 0 0 1 8.8-3.265 12.253 12.253 0 0 1 8.865 3.233 11.39 11.39 0 0 1 3.36 8.607v.64a.566.566 0 0 1-.641.641l-1.28.064c-.427 0-.64-.192-.64-.576v-.833a9.287 9.287 0 0 0-2.656-6.912 10.67 10.67 0 0 0-14.016 0 9.284 9.284 0 0 0-2.656 6.913v22.272a9.282 9.282 0 0 0 2.656 6.912 10.673 10.673 0 0 0 14.016 0 9.286 9.286 0 0 0 2.656-6.912v-.768c0-.384.213-.576.64-.575l1.28.063a.566.566 0 0 1 .64.64v.511a11.498 11.498 0 0 1-3.36 8.64 13.626 13.626 0 0 1-17.696 0v.001ZM511.193 35.503v.96a.565.565 0 0 1-.64.64H499.8a.226.226 0 0 0-.256.256v41.663a.566.566 0 0 1-.64.641h-1.216a.565.565 0 0 1-.64-.64V37.357a.227.227 0 0 0-.256-.255h-10.176a.565.565 0 0 1-.64-.64v-.96a.566.566 0 0 1 .64-.64h23.936a.566.566 0 0 1 .64.64ZM518.822 78.51a2.835 2.835 0 0 1-.8-2.047 2.923 2.923 0 0 1 .8-2.112c.544-.56 1.3-.862 2.08-.832a2.847 2.847 0 0 1 2.944 2.944c.03.78-.273 1.536-.832 2.08a2.921 2.921 0 0 1-2.112.8 2.754 2.754 0 0 1-2.08-.832ZM539.16 77.007a11.31 11.31 0 0 1-3.2-8.416v-5.44a.566.566 0 0 1 .64-.64h1.217a.567.567 0 0 1 .64.64v5.504a9.144 9.144 0 0 0 2.528 6.72 8.974 8.974 0 0 0 6.687 2.56 8.79 8.79 0 0 0 9.28-9.28V35.504a.565.565 0 0 1 .64-.64h1.217a.566.566 0 0 1 .64.64V68.59a11.252 11.252 0 0 1-3.233 8.416 13.062 13.062 0 0 1-17.055 0ZM577.106 77.102a10.482 10.482 0 0 1-3.36-8.127v-1.792a.565.565 0 0 1 .64-.64h1.088a.566.566 0 0 1 .64.64v1.6a8.544 8.544 0 0 0 2.752 6.655 10.536 10.536 0 0 0 7.36 2.496 9.876 9.876 0 0 0 6.976-2.367 8.215 8.215 0 0 0 2.56-6.336 8.397 8.397 0 0 0-1.12-4.416 11.383 11.383 0 0 0-3.328-3.392 71.626 71.626 0 0 0-6.176-3.712 71.302 71.302 0 0 1-6.24-3.84 12.174 12.174 0 0 1-3.424-3.68 10.257 10.257 0 0 1-1.28-5.345 9.86 9.86 0 0 1 3.072-7.744 12.012 12.012 0 0 1 8.32-2.752c3.796 0 6.783 1.035 8.96 3.105a10.823 10.823 0 0 1 3.264 8.224v1.6a.566.566 0 0 1-.64.64h-1.152a.565.565 0 0 1-.64-.64v-1.471a8.865 8.865 0 0 0-2.624-6.689 9.994 9.994 0 0 0-7.232-2.528 9.365 9.365 0 0 0-6.528 2.144 7.822 7.822 0 0 0-2.368 6.112 7.8 7.8 0 0 0 1.024 4.16 10.376 10.376 0 0 0 3.008 3.04 62.829 62.829 0 0 0 5.952 3.488 71.058 71.058 0 0 1 6.72 4.256 13.454 13.454 0 0 1 3.648 3.936 10.049 10.049 0 0 1 1.28 5.184 10.714 10.714 0 0 1-3.264 8.191c-2.175 2.05-5.12 3.073-8.832 3.073-3.798 0-6.817-1.024-9.057-3.073Z\"/>\n      </g>\n      <g style=\"fill:currentColor;\">\n        <path d=\"m96.59 25.058-39-22.517a12 12 0 0 0-12 0l-39 22.517a12.034 12.034 0 0 0-6 10.392v45.033a12.033 12.033 0 0 0 6 10.393l39 22.516a12 12 0 0 0 12 0l39-22.516a12.033 12.033 0 0 0 6-10.393V35.45a12.034 12.034 0 0 0-6-10.392Zm-2 55.425a4 4 0 0 1-2 3.464l-39 22.517a4 4 0 0 1-4 0l-39-22.517a4 4 0 0 1-2-3.464V35.45a4 4 0 0 1 2-3.464l39-22.517a4 4 0 0 1 4 0l39 22.517a4 4 0 0 1 2 3.464v45.033Z\"/>\n        <path d=\"M74.612 71.005h-2.866c-.673 0-1.335.17-1.925.493l-17.28 9.485L32.59 69.465V46.487L52.54 34.97l17.29 9.455a4 4 0 0 0 1.919.49h2.863a2 2 0 0 0 2-2v-2.712a2 2 0 0 0-1.04-1.754L56.383 27.952a8.039 8.039 0 0 0-7.842.09L28.59 39.56a8.025 8.025 0 0 0-4 6.929v22.976a8 8 0 0 0 4 6.928l19.95 11.519a8.043 8.043 0 0 0 7.843.087l19.19-10.53a2 2 0 0 0 1.038-1.754v-2.71a2 2 0 0 0-1.999-2Z\"/>\n        <g transform=\"translate(118 34)\">\n          <path d=\"M51.335.362c-8.28.009-14.99 6.719-15 15v17.277c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15V15.36c-.01-8.28-6.72-14.99-15-15Zm7 32.277a7 7 0 0 1-14 0V15.36a7 7 0 0 1 14 0V32.64ZM14.67 8.421a7.01 7.01 0 0 1 7.867 6.075.99.99 0 0 0 .985.865h6.03a1.01 1.01 0 0 0 .998-1.097C29.945 6.14 22.971-.02 14.834.381 6.751.932.504 7.696.59 15.796v16.407C.503 40.305 6.752 47.068 14.835 47.62c8.137.401 15.11-5.76 15.716-13.884a1.01 1.01 0 0 0-.999-1.097h-6.03a.99.99 0 0 0-.984.865 7.01 7.01 0 0 1-7.868 6.075 7.164 7.164 0 0 1-6.08-7.184v-16.79a7.164 7.164 0 0 1 6.08-7.184ZM97.513 27.928a12.158 12.158 0 0 0 7.184-11.077v-3.702C104.697 6.44 99.257 1 92.547 1H75.59a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V29h6.621l7.916 17.414a1 1 0 0 0 .91.586h6.591a1 1 0 0 0 .91-1.414l-8.025-17.658Zm-.816-11.077A4.154 4.154 0 0 1 92.547 21h-9.85V9h9.85a4.154 4.154 0 0 1 4.15 4.15v3.7ZM139.59 1h-26a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h26a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-19V27h13a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-13V9h19a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1ZM177.59 1h-6a1 1 0 0 0-1 1v22.648a7.007 7.007 0 1 1-14 0V2a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v22.648a15.003 15.003 0 1 0 30 0V2a1 1 0 0 0-1-1Z\"/>\n          <rect width=\"8\" height=\"38\" x=\"186.59\" y=\"1\" rx=\"1\"/>\n        </g>\n      </g>\n    </g>\n  </g>`,\n]\n","export const sygnet = [\n  '102 115',\n  `<g style=\"fill: currentColor\">\n    <path d=\"M96 24.124 57 1.608a12 12 0 0 0-12 0L6 24.124a12.034 12.034 0 0 0-6 10.393V79.55a12.033 12.033 0 0 0 6 10.392l39 22.517a12 12 0 0 0 12 0l39-22.517a12.033 12.033 0 0 0 6-10.392V34.517a12.034 12.034 0 0 0-6-10.393ZM94 79.55a4 4 0 0 1-2 3.464l-39 22.517a4 4 0 0 1-4 0L10 83.014a4 4 0 0 1-2-3.464V34.517a4 4 0 0 1 2-3.464L49 8.536a4 4 0 0 1 4 0l39 22.517a4 4 0 0 1 2 3.464V79.55Z\"/>\n    <path d=\"M74.022 70.071h-2.866a4 4 0 0 0-1.925.494L51.95 80.05 32 68.531V45.554l19.95-11.519 17.29 9.455a4 4 0 0 0 1.919.49h2.863a2 2 0 0 0 2-2v-2.71a2 2 0 0 0-1.04-1.756L55.793 27.02a8.04 8.04 0 0 0-7.843.09L28 38.626a8.025 8.025 0 0 0-4 6.929V68.53a8 8 0 0 0 4 6.928l19.95 11.519a8.043 8.043 0 0 0 7.843.088l19.19-10.532a2 2 0 0 0 1.038-1.753v-2.71a2 2 0 0 0-2-2Z\"/>\n  </g>`,\n]\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBriefcase,\n  cilChart,\n  cilColumns,\n  cilEnvelopeLetter,\n  cilList,\n  cilPencil, cilPlaylistAdd,\n  cilPlus,\n  cilSpeedometer,\n  cilUser\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Backlog',\n    to: '/backlog',\n    icon: <CIcon icon={cilBriefcase} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Words',\n    to: '/words',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />\n  },\n  {\n    component: CNavItem,\n    name: 'Statistics',\n    to: '/statistics',\n    icon: <CIcon icon={cilChart} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Import and export',\n  },\n  {\n    component: CNavItem,\n    name: 'Words',\n    to: '/import_export_words',\n    icon: <CIcon icon={cilList} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Whole profile',\n    to: '/import_export_profile',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Settings',\n  },\n  {\n    component: CNavItem,\n    name: 'Trainings editor',\n    to: '/trainings',\n    icon: <CIcon icon={cilColumns} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Terms editor',\n    to: '/terms',\n    icon: <CIcon icon={cilEnvelopeLetter} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CCloseButton,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarFooter,\n  CSidebarHeader,\n  CSidebarNav,\n  CSidebarToggler,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logo } from '../assets/brand/logo'\nimport { sygnet } from '../assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      className=\"border-end\"\n      colorScheme=\"dark\"\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"border-bottom\">\n        <CSidebarBrand to=\"/\">\n          <CIcon customClassName=\"sidebar-brand-full\" icon={logo} height={32} />\n          <CIcon customClassName=\"sidebar-brand-narrow\" icon={sygnet} height={32} />\n        </CSidebarBrand>\n        <CCloseButton\n          className=\"d-lg-none\"\n          dark\n          onClick={() => dispatch({ type: 'set', sidebarShow: false })}\n        />\n      </CSidebarHeader>\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\n        <CSidebarToggler\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebarFooter>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\n        <AppHeader />\n        <div className=\"d-flex flex-grow-1\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","TrainingModificationPage","TrainingsPage","TrainingSession","Statistics","ImportExportWords","ImportExportProfile","BacklogPage","TermsPage","TermModificationPage","path","exact","name","element","AppContent","_jsx","CContainer","className","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","href","target","rel","mergeProfiles","profile1","profile2","storage","Map","mergeAttributeDefinitions","attributes1","attributes2","mergeArrays","intern","cloneProfile","trainingProgresses1","trainingProgresses2","trainingDefinitions1","trainingDefinitions2","terms1","terms2","termDefinitions1","termDefinitions2","termDefinitions","flatMap","t","attributes","item","mainItem","secondItem","terms","termDefinition","attributeValues","internKeysOfMap","mergeMapsFirstPriority","trainingDefinitions","configuration","internKeysOfMapWithInnerUpdate","value","mergeMaps","trainingProgresses","map1","map2","entityUpdater","entityMerger","mergedKeys","result","applyMapToResult","forEach","key","validateId","id","has","set","existingKey","get","existingValue","mergeMapsWithCustomMerger","progress","term","mainProgress","secondProgress","array1","array2","mergedElements","existingItem","resolveConflict","Array","from","values","newKey","existingElement","newCandidate","_newCandidate$lastEdi","_existingElement$last","lastEditDate","existingEntity","internedMap","valueUpdater","Error","profile","setProfile","useContext","ProfileContext","showToast","ToastContext","hasDriveAccess","requestDriveAccess","disconnectDrive","isDriveLoaded","isDriveAuthorizing","error","fetchFileList","fetchFile","uploadFile","updateFile","deleteFile","useGoogleDrive","existingFile","setExistingFile","useState","filesError","setFilesError","CButton","onClick","message","then","response","_response$data$files","firstProfileFile","data","files","find","file","console","log","catch","metadata","mimeType","File","serializeProfile","type","smartMerge","r","text","TextDecoder","decode","Uint8Array","deserializedProfile","deserializeProfile","_existingFile$id","mergedProfile","markProfileDirty","updatedFile","e","deleteProfileFromDrive","window","confirm","AppHeader","_routes$find$name","_routes$find","visible","setVisible","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","location","useLocation","pathname","currentRoute","CHeader","position","ref","fluid","CHeaderToggler","style","marginInlineStart","CIcon","icon","cilMenu","size","CHeaderNav","CNavItem","CNavLink","cilCloudDownload","CDropdown","variant","placement","CDropdownToggle","caret","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","active","component","CModal","onClose","CModalHeader","CModalTitle","CModalBody","synchronizationEnabled","GoogleDriveSynchronizer","AppSidebarNav","_ref","items","navLink","badge","indent","arguments","length","undefined","_Fragment","CBadge","navItem","index","rest","Component","_createElement","NavLink","navGroup","_item$items","compact","String","toggler","startsWith","logo","sygnet","cilSpeedometer","customClassName","cilBriefcase","cilPencil","cilChart","CNavTitle","cilList","cilUser","cilColumns","cilEnvelopeLetter","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","colorScheme","onVisibleChange","CSidebarHeader","CSidebarBrand","height","CCloseButton","dark","CSidebarNav","SimpleBar","navigation","CSidebarFooter","CSidebarToggler","DefaultLayout"],"sourceRoot":""}